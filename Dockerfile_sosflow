# docker run -it chimbuko/adios2 /bin/bash
FROM chimbuko/adios2
ARG JOBS=16

# --------------------------------------------------------
# SOS
# --------------------------------------------------------

# SQLite3

RUN apt-get install sqlite3 libsqlite3-dev

# SOS 
WORKDIR /Downloads
RUN git clone https://github.com/cdwdirect/sos_flow.git
RUN mkdir build 
WORKDIR /Downloads/sos_flow/build
RUN cmake -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=/opt/sos_flow \
          -DMPI_C_NO_INTERROGATE=TRUE \
          -DEVPath_DIR=/opt/adios2 \
          -DSOS_ENABLE_PYTHON=FALSE \
          -DBUILD_SHARED_LIBS=TRUE \
          .. \
 && make -j$JOBS \
 && make install

# JEMalloc - there will be warnings / errors when installing 
# documentation.  Just ignore the errors with 'make -i'

WORKDIR /Downloads
RUN wget https://github.com/jemalloc/jemalloc/archive/5.1.0.tar.gz \
 && tar -xzf 5.1.0.tar.gz
WORKDIR /Downloads/jemalloc-5.1.0
RUN autoconf \
 && ./configure --prefix=/opt/jemalloc \
 && make -j$JOBS \
 && make -i install

# ADIOS no MPI, no HDF5 (which was built with MPI)

RUN mkdir -p /Downloads/ADIOS2/build_nompi
WORKDIR /Downloads/ADIOS2/build_nompi
RUN cmake -DCMAKE_INSTALL_PREFIX=/opt/adios2_nompi \
          -DADIOS2_USE_MPI:BOOL=OFF \
          -DADIOS2_USE_HDF5:BOOL=OFF \
          -DADIOS2_USE_ZeroMQ:BOOL=ON \
          -DADIOS2_USE_Fortran:BOOL=ON \
          -DADIOS2_USE_Python:BOOL=ON \
          -DADIOS2_USE_SST:BOOL=ON \
          -DADIOS2_USE_BZip2:BOOL=ON \
          -DADIOS2_USE_ZFP:BOOL=OFF \
          -DADIOS2_USE_DataMan:BOOL=ON \
          -DPYTHON_EXECUTABLE=/usr/bin/python3 \
          -DLIBFABRIC_ROOT=/opt/libfabric \
          -DHDF5_ROOT=/opt/hdf5-parallel \
          -DSZ_ROOT=/opt/SZ \
          -DADIOS2_BUILD_TESTING:BOOL=OFF \
          -DADIOS2_BUILD_EXAMPLES_EXPERIMENTAL:BOOL=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DMPIEXEC_MAX_NUMPROCS:STRING=$JOBS \
          .. \
 && make -j$JOBS \
 && make install

# SOS extraction script

WORKDIR /Downloads
RUN git clone https://github.com/khuck/sos_flow_experiments.git
RUN wget https://github.com/nlohmann/json/archive/v3.5.0.tar.gz \
 && tar -xzf v3.5.0.tar.gz
WORKDIR /Downloads/sos_flow_experiments/sos_scripts/CODAR_TAU_trace_to_SOS_to_ADIOS_cpp
RUN SOS=/opt/sos_flow \
    ADIOS2=/opt/adios2_nompi \
    JSON=/Downloads/json-3.5.0 \
    JEMALLOC=/opt/jemalloc make -j$JOBS \
 && cp extract /opt/sos_flow/bin/sos_extract

# --------------------------------------------------------
# TAU
# --------------------------------------------------------

# PDT

WORKDIR /Downloads
RUN wget http://tau.uoregon.edu/pdt_lite.tar.gz \
 && tar -xzf pdt_lite.tar.gz
WORKDIR /Downloads/pdtoolkit-3.25
RUN ./configure -GNU -prefix=/opt/pdt \
 && make -j$JOBS \
 && make install

# PAPI

WORKDIR /Downloads
RUN wget http://icl.utk.edu/projects/papi/downloads/papi-5.6.0.tar.gz \
 && tar -xzf papi-5.6.0.tar.gz
WORKDIR /Downloads/papi-5.6.0/src
RUN ./configure --prefix=/opt/papi \
 && make -j$JOBS \
 && make install

# TAU

WORKDIR /Downloads
RUN git clone https://github.com/UO-OACISS/tau2.git
WORKDIR /Downloads/tau2
RUN ./configure -cc=gcc -c++=g++ -fortran=gfortran -mpi \
    -pthread -bfd=download -unwind=download -pdt=/opt/pdt \
    -pdt_c++=g++ -prefix=/opt/tau2 -sos=/opt/sos_flow \
    -papi=/opt/papi \
 && make -j$JOBS install

