LIB_NAME = chimbuko

INC_DIRS := include 3rdparty
INC_FLAGS := $(addprefix -I,$(INC_DIRS))

BIN_DIR ?= bin
BUILD_DIR ?= build
SRC_DIRS ?= src
LIB_DIR ?= lib

CXX := mpic++
CXX_FLAGS := $(INC_FLAGS) -MMD -MP -Wall -Wextra -std=c++17 -O3 -lstdc++fs
LDFLAGS := `$(CXX) --showme:link` -L$(LIB_DIR) -l$(LIB_NAME) -Wl,-rpath,\$$ORIGIN/../${LIB_DIR},-rpath,\$$ORIGIN/../../${LIB_DIR}

ADIOS = /ccs/proj/csc299/codar/sw/adios2
ADIOS_FLAGS = -isystem ${ADIOS}/include
ADIOS_LIBS = `${ADIOS}/bin/adios2-config --cxx-libs`

CURL_FLAGS = `curl-config --libs`

# network layer: _USE_MPINET or _USE_ZMQNET
# performance metric: _PERF_METRIC
#PS_FLAGS = -D_USE_MPINET
PS_FLAGS = -D_USE_ZMQNET

TARGET_LIB := lib/lib${LIB_NAME}.so
EXEC_SRCS := $(wildcard app/*.cpp)
EXEC_TARS := $(patsubst %.cpp,bin/%,$(EXEC_SRCS))
SRCS = $(shell find $(SRC_DIRS) -name "*.cpp")
OBJS = $(SRCS:%.cpp=$(BUILD_DIR)/%.o)
DEPS = $(OBJS:.o=.d)

all: $(EXEC_TARS) $(TARGET_LIB)
	cp app/ws_flask_stat.py bin

debugvars:
	@echo $(SRCS)
	@echo $(OBJS)
	@echo $(EXEC_SRCS)
	@echo $(EXEC_TARS)
	@echo $(TARGET_LIB)

bin/%: build/%.o | $(TARGET_LIB)
	$(MKDIR_P) $(@D)
	$(CXX) $(CXX_FLAGS) $(PS_FLAGS) $< $(LDFLAGS) $(ADIOS_LIBS) $(CURL_FLAGS) -lzmq -lstdc++fs -o $@ 

lib/lib$(LIB_NAME).so: $(OBJS)
	$(MKDIR_P) $(@D)
	$(CXX) $(CXX_FLAGS) $(PS_FLAGS) $^ -shared -Wl,-soname,lib$(LIB_NAME).so -o $@

$(BUILD_DIR)/%.o: %.cpp
	$(MKDIR_P) $(@D)
	$(CXX) -c -fPIC $(CXX_FLAGS) $(PS_FLAGS) $< -o $@ $(ADIOS_FLAGS) $(CURL_FLAGS)

test/%.o: %.cpp
	$(CXX) -c $(CXX_FLAGS) $(PS_FLAGS) $< -o $@ $(ADIOS_FLAGS) $(CURL_FLAGS)


.PHONY: clean

clean:
	$(RM) -r $(BUILD_DIR) $(BIN_DIR) $(LIB_DIR)
	$(RM) -rf scripts/docker/test scripts/summit/test

-include $(DEPS)

MKDIR_P ?= mkdir -p

RM ?= rm
